RAM_INST[0] = 32'b000101_00000_00001_0000000000001111; 						//li $r1, 15 			# r1 <= 15
RAM_INST[1] = 32'b001100_00000000000000000000000101; 						//jal 5					# ra <= pc ; pc <= 5
RAM_INST[2] = 32'b001010_11111_00000_0000000000000000; 						//out $ra		 		# display <= 1
RAM_INST[3] = 32'b000101_00000_00010_0000000000000101;						//li $r2, 5 			# r2 <= 5
RAM_INST[4] = 32'b000000_00001_00010_00011_00000_000101;					//add $r3, $r1, $r2 	# r3 <= 20
RAM_INST[5] = 32'b000111_00011_00000_1111111111111101; 						//beq $r3, $zero, -3	# pc <= 2
RAM_INST[6] = 32'b000000_00011_00011_00000_00010_000000;					//sll $r3, $r3, 2 		# r3 <= 80
RAM_INST[7] = 32'b000000_00011_00011_00000_00000_001001;					//inc $r3, $r3 			# r3 <= 81
RAM_INST[8] = 32'b000100_00001_00010_0000000000001100;						//subi $r2, $r1, 12 	# r2 <= 3
RAM_INST[9] = 32'b000000_00011_00010_00100_00000_001000;					//div $r4, $r3, $r2		# r4 <= 27
RAM_INST[10] = 32'b000000_00001_00001_00000_00000_001010;					//dec $r1, $r1			# r1 <= 14 
RAM_INST[11] = 32'b000000_00010_00001_00101_00000_001100;					//and $r5, $r2, $r1  	# r5 <= 2
RAM_INST[12] = 32'b000000_00101_00100_00001_00000_010001;					//slt $r1, $r5, $r4		# r1 <= 1
RAM_INST[13] = 32'b000000_00101_00010_00000_00000_010000;					//move $r2, $r5			# r2 <= 2
RAM_INST[14] = 32'b000010_00001_00010_0000000000000000; 					//sw $r2, 0($r1) 		# mem(1) <= 2
RAM_INST[15] = 32'b000001_00000_00110_0000000000000001; 					//lw $r6, 1($zero) 		# r6 <= 2
RAM_INST[16] = 32'b001001_00000_00111_0000000000000000; 					//in $r7		 		# r7 <= input
RAM_INST[17] = 32'b000111_00111_00000_1111111111111111; 					//beq $r7, $zero, -1	# pc <= (16 ou 18)
RAM_INST[18] = 32'b111111_00000000000000000000000000; 						//halt					# end