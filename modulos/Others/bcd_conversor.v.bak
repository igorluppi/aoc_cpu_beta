


module BCD ( binary, x0, x1, x2, x3, x4, x5, x6, x7) ;
	input [31:0] binary ;
	output reg [3:0] x0 , x1 , x2, x3, x4, x5, x6, x7;

	integer i;

	always @ ( binary ) begin
		x7 = 0;
		x6 = 0;
		x5 = 0;
		x4 = 0;
		x3 = 0;
		x2 = 0;
		x1 = 0;
		x0 = 0;
		
		for ( i =31; i >=0; i=i-1) begin
		if ( gazillions>= 5)
		gazillions= gazillions+ 3 ;
		if ( trillions>= 5)
		trillions= trillions+ 3 ;
		if ( x5>= 5)
		x5= x5+ 3 ;
		if ( millions>= 5)
		millions= millions+ 3 ;
		if ( x3>= 5)
		x3= x3+ 3 ;
		if ( x2>= 5)
		x2= x2+ 3 ;
		if ( x1 >= 5)
		x1 = x1 + 3 ;
		if ( x0 >=5)
		x0 = x0 + 3 ;

gazillions= gazillions<< 1 ;
gazillions[ 0 ] = trillions[ 3 ] ;
trillions= trillions<< 1 ;
trillions[ 0 ] = x5[ 3 ] ;
x5= x5<< 1 ;
x5[ 0 ] = millions[ 3 ] ;
millions= millions<< 1 ;
millions[ 0 ] = x3[ 3 ] ;
x3= x3<< 1 ;
x3[ 0 ] = x2[ 3 ] ;
x2= x2<< 1 ;
x2[ 0 ] = x1 [ 3 ] ;
x1 = x1 << 1 ;
x1 [ 0 ] = x0 [ 3 ] ;
x0 = x0 << 1 ;
x0 [ 0 ] = binary [ i ] ;
end
end
endmodule //
